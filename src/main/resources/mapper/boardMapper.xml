<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fastcampus.ch4.dao.BoardMapper">

    <!-- select bno,title, content, writer,view_cnt, comment_cnt, reg_date, up_date from board where bno=1;
         select bno,title, content, writer,view_cnt, comment_cnt, reg_date, up_date from board where bno = #{bno};
         delete from board where bno='2' and writer = 'aaaa';
         delete from board where bno=#{bno} and writer = #{writer};
         insert into board (title, content, writer) values ('aaa', 'aaaa', 'aaaa');
         insert into board (title, content, writer) values (#{title}, #{content}, #{writer});
         update board set title = 'asdf', content = 'qwer', up_date = now() where bno = 1;
         update board set title = #{title}, content = #{content}, up_date = now() where bno = #{bno}; -->

    <!-- 전체 게시물 갯수 -->
    <select id="count" resultType="int"> <!-- resultType : sql의 실행결과를 담아올 타입 지정-->
        SELECT count(*) FROM board
    </select>

    <delete id="deleteAll">
        DELETE FROM board
    </delete>

    <!-- 관리자 전용 삭제 -->
    <delete id="deleteForAdmin">
        DELETE FROM board WHERE bno = #{bno}
    </delete>

    <!-- 게시물 번호와 작성자가 동일할 때만 삭제 가능 -->
        <delete id="delete" parameterType="map">
        DELETE FROM board WHERE bno = #{bno} and writer = #{writer}
    </delete>

    <insert id="insert" parameterType="BoardDto">
        INSERT INTO board
            (title, content, writer)
        VALUES
            (#{title}, #{content}, #{writer})
    </insert>

    <!-- 등록일, 번호 역순 -->
    <select id="selectAll" resultType="BoardDto">
        SELECT bno, title, content, writer, view_cnt, comment_cnt, reg_date
        FROM board
        ORDER BY reg_date DESC, bno DESC
    </select>

    <sql id="selectFromBoard">
        SELECT bno, title, content, writer, view_cnt, comment_cnt, reg_date
        FROM board
    </sql>

    <select id="select" parameterType="int" resultType="BoardDto">
        <include refid="selectFromBoard"/>
        WHERE bno = #{bno}
    </select>

    <select id="selectPage" parameterType="map" resultType="BoardDto">
    <include refid="selectFromBoard"/>
    ORDER BY reg_date DESC, bno DESC
    LIMIT #{offset}, #{pageSize}
    </select>

    <update id="update" parameterType="BoardDto">
        UPDATE board
        SET   title = #{title}
          , content = #{content}
          , up_date = now()
        WHERE bno = #{bno} <!--and wrtier = #{writer}-->
    </update>

    <update id="updateCommentCnt" parameterType="map">
        UPDATE board
        SET   comment_cnt = comment_cnt + #{cnt}
        WHERE bno = #{bno}
    </update>

    <update id="increaseViewCnt" parameterType="int">
        UPDATE board
        SET   view_cnt = view_cnt + 1
        WHERE bno = #{bno}
    </update>

    <sql id="searchCondition">
        <choose>
            <when test='option=="T"'>
                AND title LIKE concat('%', #{keyword}, '%')
            </when>
            <when test='option=="W"'>
                AND title LIKE concat('%', #{keyword}, '%')
            </when>
            <otherwise>
                AND (title LIKE concat('%', #{keyword}, '%')
                OR content LIKE concat('%', #{keyword}, '%'))
            </otherwise>
        </choose>
    </sql>
    
    <select id="searchSelectPage" parameterType="SearchCondition" resultType="BoardDto">
        SELECT bno, title, content, writer, view_cnt, comment_cnt, reg_date
        FROM board
        WHERE true
        <include refid="searchCondition"/>
        ORDER BY reg_date DESC, bno DESC
            LIMIT #{offset}, #{pageSize}
    </select>

    <select id="searchResultCnt" parameterType="SearchCondition" resultType="int">
        SELECT count(*)
        FROM board
        WHERE true
        <include refid="searchCondition"/>
    </select>

</mapper>